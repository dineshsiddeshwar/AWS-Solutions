AWSTemplateFormatVersion: 2010-09-09

Parameters:
  S3BucketName:
    Type: String
    Description: S3 Bucket Name
  FolderName:
    Type: String
    Description: Folder Name

Resources:
  Ec2SsmHouskeepingIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'platform_stackset_ec2_ssm_init_housekeeping_role_${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  Ec2SsmHouskeepingIamPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub 'platform_stackset_ec2_ssm_init_housekeeping_policy_${AWS::Region}'
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 'cloudformation:Describe*'
              - 'cloudformation:List*'
              - 'cloudformation:Get*'
              - 'logs:Describe*'
              - 'logs:Get*'
              - 'logs:List*'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Resource: !Sub 'arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/platform_ec2_ssm_init_housekeeping*'
          - Effect: Allow
            Action:
              - 'cloudformation:Delete*'
              - 'cloudformation:Update*'
            Resource: !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:stack/SetupManagedRoleOnInstance*'
          - Effect: Allow
            Action:
              - 'logs:Delete*'
            Resource: !Sub 'arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/Init*Lambda*'
          - Effect: Allow
            Action:
              - 'lambda:Delete*'
            Resource: !Sub 'arn:aws:lambda:*:${AWS::AccountId}:function:Init*Lambda*'
      Roles:
        - !Ref Ec2SsmHouskeepingIamRole

  Ec2SsmHouskeepingLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: platform_ec2_ssm_init_housekeeping
      Code:
        S3Bucket:
          Fn::Sub:
              - "${S3BucketName}${AWS::Region}"
              - {S3BucketName: !Ref S3BucketName}
        S3Key:
          Fn::Sub:
              - "${releasefolder}/platform_ec2_ssm_init_housekeeping.zip"
              - {releasefolder: !Ref FolderName}
      Description: "Function to clean up EC2 SSM initialisation resources"
      Handler: platform_ec2_ssm_init_housekeeping.lambda_handler
      MemorySize: 1024
      Role: !GetAtt Ec2SsmHouskeepingIamRole.Arn
      Runtime: python3.10
      Timeout: 600

  Ec2SsmHousekeepingEventRule:
    Type: "AWS::Events::Rule"
    Properties:
      Name: platform_ec2_ssm_init_housekeeping
      Description: "Scheduled rule to trigger the EC2 SSM initialisation housekeeping function once per week on Sunday"
      ScheduleExpression: "cron(0 1 ? * L *)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt Ec2SsmHouskeepingLambdaFunction.Arn
          Id: "TargetFunctionV1"

  Ec2SsmHousekeepingEventPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref Ec2SsmHouskeepingLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "Ec2SsmHousekeepingEventRule"
          - "Arn"
