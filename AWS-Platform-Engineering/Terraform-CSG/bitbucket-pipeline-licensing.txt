image: maven:3.3.9

pipelines:
  branches:
    pipeline-uat:
      - step:
          name: UAT-Build and Test
          caches:
            - maven
          script:
          ###INSTALLING ZIP PACKAGE ONLY
#            - uname -r
            - cat /etc/os-release
            - uname -a
#            - apt-get install debian-keyring debian-archive-keyring
#            - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AA8E81B4331F7F50
#            - wget http://ftp.de.debian.org/debian/pool/main/z/zip/zip_3.0-12_amd64.deb
#            - apt-get update
#            - apt-cache search zip
#            - apt install zip -y
#            - zip --help
           #DEFINING THE VARIABLES
            - instance='uat'
            - echo $instance
            - opsbranchname='uat-pipeline-deployment-integration'
            - echo $opsbranchname
            - export BUILD_NUMBER='12345'
            - echo "The BUILD_NUMBER="$BUILD_NUMBER
            - echo "The UAT_DATABASE_URL="$UAT_DATABASE_URL
            - echo "The UAT_DATABASE_PORT="$UAT_DATABASE_PORT
            - echo "The UAT_PROFORMLICENSING_LOGPATH="$UAT_PROFORMLICENSING_LOGPATH
            - echo "The UAT_PROFORM_LICENSING_LOGPATH="$UAT_PROFORM_LICENSING_LOGPATH
            - echo "The UAT_DATABASE_USERNAME="$UAT_DATABASE_USERNAME
            - echo "The UAT_DATABASE_PASSWD="$UAT_DATABASE_PASSWD
            - echo "The UAT_ENV_NAME="$UAT_ENV_NAME
            - pwd
            - ls -l
          #CLONING THE OPS REPO
            - git --version
            - git clone git@bitbucket.org:cobbsystemsgroup/proform-operations.git
            - cd /opt/atlassian/pipelines/agent/build/proform-operations
            - ls -l
            - git checkout --track origin/$opsbranchname
            - git pull origin $opsbranchname
          #REPLACING THE REQUIRED PROPERTIES ACCORDING TO ENV FOR LICENSE-MANAGEMENT-SERVICE
            - cd /opt/atlassian/pipelines/agent/build/
            - ls -l
            - pwd
            - dpkg -i /opt/atlassian/pipelines/agent/build/proform-operations/deployment/config/common/pipeline/zip_3.0-12_amd64.deb
            - apt-get install -f
            - zip --help
            - cp /opt/atlassian/pipelines/agent/build/proform-operations/deployment/config/$instance/proform-license-management-service/application.properties /opt/atlassian/pipelines/agent/build/proform-license-management-service/src/main/resources/
            - cp /opt/atlassian/pipelines/agent/build/proform-operations/deployment/config/$instance/proform-license-management-service/logback-spring.xml /opt/atlassian/pipelines/agent/build/proform-license-management-service/src/main/resources/           #EXECUTING SHELLSCRIPT
            - chmod +x /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/replacescripts/$instance/proform-license-management-service/$instance.sh
            - cd /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/replacescripts/$instance/proform-license-management-service/
            - pwd
            - ls -l
            - ./$instance.sh
           ##REPLACING THE REQUIRED PROPERTIES ACCORDING TO ENV FOR LICENSE-SCHEDULER-SERVICE
            - cp /opt/atlassian/pipelines/agent/build/proform-operations/deployment/config/$instance/proform-license-management-scheduler/application.properties /opt/atlassian/pipelines/agent/build/proform-license-management-scheduler/src/main/resources/
            - cp /opt/atlassian/pipelines/agent/build/proform-operations/deployment/config/$instance/proform-license-management-scheduler/logback-spring.xml /opt/atlassian/pipelines/agent/build/proform-license-management-scheduler/src/main/resources/           #EXECUTING SHELLSCRIPT
            - chmod +x /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/replacescripts/$instance/proform-license-management-scheduler/$instance.sh
            - cd /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/replacescripts/$instance/proform-license-management-scheduler/
            - pwd
            - ls -l
            - ./$instance.sh
           #STARTING THE MAVEN BUILD
            - cd /opt/atlassian/pipelines/agent/build
            - mvn -v
            - java -version
            - mvn clean install
            - cd /opt/atlassian/pipelines/agent/build/proform-license-management-service/target/
            - ls -l
            - cd /opt/atlassian/pipelines/agent/build
            - mkdir service_artifact
            - pwd
            - ls -l
            - cd /opt/atlassian/pipelines/agent/build/proform-license-management-scheduler/target/
            - ls -l
            - cd /opt/atlassian/pipelines/agent/build
            - mkdir scheduler_artifact            
            - pwd
            - ls -l
            - mkdir multiple_artifact
            #MAKING ZIP MAVEN FOR THE DEPLOYMENT FOR LICENSE-MANAGEMENT-SERVICE
            - cp /opt/atlassian/pipelines/agent/build/proform-license-management-service/target/proform-license-management-service-1.0.jar /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-service/target/
            - sed -i "s/BUILD_NUMBER/$BUILD_NUMBER/g" /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-service/buildspec.yml
            - sed -i "s/BUILD_NUMBER/$BUILD_NUMBER/g" /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-service/service.yaml
            - cd /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-service/
            - ls -l
            - zip -r proform-license-management-service.zip *
            - cp /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-service/proform-license-management-service.zip /opt/atlassian/pipelines/agent/build/service_artifact/
            - cd /opt/atlassian/pipelines/agent/build/service_artifact/
            - ls -l
            - cp -r /opt/atlassian/pipelines/agent/build/service_artifact/*  /opt/atlassian/pipelines/agent/build/multiple_artifact/
            - ls -l
            - cd /opt/atlassian/pipelines/agent/build/multiple_artifact/
            - pwd
            - ls -l
            #MAKING ZIP MAVEN DEPLOYMENT FOR LICENSE-SCHEDULER-SERVICE
            - cp /opt/atlassian/pipelines/agent/build/proform-license-management-scheduler/target/proform-license-management-scheduler-1.0.jar /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-scheduler/target/
            - sed -i "s/BUILD_NUMBER/$BUILD_NUMBER/g" /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-scheduler/buildspec.yml
            - sed -i "s/BUILD_NUMBER/$BUILD_NUMBER/g" /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-scheduler/service.yaml
            - cd /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-scheduler/
            - ls -l
            - zip -r proform-license-management-scheduler.zip *
            - cp /opt/atlassian/pipelines/agent/build/proform-operations/deployment/setup/deploymenttemplate/$instance/proform-license-management-scheduler/proform-license-management-scheduler.zip /opt/atlassian/pipelines/agent/build/scheduler_artifact/
            - cd /opt/atlassian/pipelines/agent/build/scheduler_artifact/
            - ls -l
            - cp -r /opt/atlassian/pipelines/agent/build/scheduler_artifact/* /opt/atlassian/pipelines/agent/build/multiple_artifact/
            - cd /opt/atlassian/pipelines/agent/build/multiple_artifact/
            - pwd
            - ls -l

          artifacts:
#            - service_artifact/*
#            - scheduler_artifact/*
              - multiple_artifact/*
          after-script:
              - echo $BITBUCKET_EXIT_CODE
              - if [ $BITBUCKET_EXIT_CODE = 0 ];then exit 0;else echo "Step failed";fi;
              -  pipe: atlassian/email-notify:0.3.8
                 variables:
                   USERNAME: $SMTP_USERNAME
                   PASSWORD: $SMTP_PASSWORD
                   FROM: 'support@csgsol.com'
                   TO: 'pavan.a@csgsol.com'
                   HOST: 'smtp.gmail.com'
                   PORT: 587
                   SUBJECT: 'Bitbucket Pipe Notification for your-bitbucket-branch'
                   BODY_PLAIN: Email send from Bitbucket Pipeline <a href='https://bitbucket.org/${BITBUCKET_WORKSPACE}/${BITBUCKET_REPO_SLUG}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}'>build#${BITBUCKET_BUILD_NUMBER}</a>'
            
      - step:
            name: Deploy to S3
            script:
              - pipe: atlassian/aws-s3-deploy:0.3.7
                variables:
                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY
                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_KEY
                  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
                  S3_BUCKET: 'naresh1986/efs_backup/proform-license-management-service'
                  #EXPIRES: '2018-10-01'
                  LOCAL_PATH: '/opt/atlassian/pipelines/agent/build/multiple_artifact/'
                  #ACL: 'public-read'
              - pwd
              - ls -l

#      - step:
#            name: Deploy to S3
#            script:
#              - pipe: atlassian/aws-s3-deploy:0.3.7
#                variables:
#                  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY
#                  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_KEY
#                  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
#                  S3_BUCKET: 'naresh1986/efs_backup/proform-license-management-service'
#                  #EXPIRES: '2018-10-01'
#                  LOCAL_PATH: '/opt/atlassian/pipelines/agent/build/service_artifact/'
#                  #ACL: 'public-read'
#              - pwd
#              - ls -l
