# Template Terraform to deploy to Cloud Infrastructure

# This template allows you to deploy your infrastructure using Terraform to supported cloud providers.
# The workflow allows running tests, security scans on feature branches (as well as master).
# After merging code to master the infrastructure will be deployed to cloud according to the given terraform template.

# Prerequisites: credentials according to used cloud provider.
# For advanced cases, please, follow terraform docs https://www.terraform.io/docs/index.html.

image: hashicorp/terraform:latest

pipelines:
    default:
        - step:
            script:
             ###--DEFINING THE VARIABLES--###
                - env='mcgov'
                - echo $env
                - author='naresh'
                - echo $author

             ###--Executing Terraform script under specified environment--###
                - cd environments/$env
                - pwd && ls -l
                - terraform init -backend-config="access_key=$AWS_ACCESS_KEY_ID" -backend-config="secret_key=$AWS_SECRET_ACCESS_KEY"
                - terraform --version
                - terraform fmt -recursive
                - terraform validate
    branches:
        development:
            - step:
                script:
                 ###--DEFINING THE VARIABLES--###
                    - env='mcgov'
                    - echo $env
                    - author='naresh'
                    - echo $author

                 ###--Executing Terraform script under specified environment--###    
                    - cd environments/$env
                    - terraform init -backend-config="access_key=$AWS_ACCESS_KEY_ID" -backend-config="secret_key=$AWS_SECRET_ACCESS_KEY"
                    - terraform --version
                    - terraform fmt -recursive
                    - terraform validate
                    - terraform plan
        master:
            - step:
                script:
                 ###--DEFINING THE VARIABLES--###
                    - env='mcgov'
                    - echo $env
                    - author='naresh'
                    - echo $author

                 ###--Executing Terraform script under specified environment--### 
                    - cd environments/$env
                    - terraform init -backend-config="access_key=$AWS_ACCESS_KEY_ID" -backend-config="secret_key=$AWS_SECRET_ACCESS_KEY"
                    - terraform --version
                    - terraform fmt -recursive
                    - terraform validate
                    - terraform plan
                    - terraform apply -input=false -auto-approve



