{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "aws-portal:ModifyAccount",
        "aws-portal:ModifyBilling",
        "aws-portal:ModifyPaymentMethods",
        "ds:DeleteConditionalForwarder",
        "ds:DeleteDirectory",
        "ds:DeleteTrust",
        "ds:UnshareDirectory",
        "ds:UpdateConditionalForwarder",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:CreateClientVpnRoute",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateVpnGateway",
        "ec2:DeleteClientVpnRoute",
        "ec2:DeleteLocalGatewayRoute",
        "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "ec2:DeleteVpnGateway",
        "ec2:DeregisterInstanceEventNotificationAttributes",
        "ec2:DetachVpnGateway",
        "ec2:DisableEbsEncryptionByDefault",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:EnableVgwRoutePropagation",
        "ec2:ImportClientVpnClientCertificateRevocationList",
        "ec2:ModifyVpnTunnelCertificate",
        "ec2:ModifyVpnTunnelOptions",
        "ec2:RevokeClientVpnIngress",
        "ec2:TerminateClientVpnConnections",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:ModifyVpnConnectionOptions",
        "ec2:GetVpnConnectionDeviceTypes",
        "ec2:ModifyVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:DeleteVpnConnection",
        "ec2:GetVpnConnectionDeviceSampleConfiguration",
        "ec2:CreateVpnConnection",
        "ec2:CreateCustomerGateway",
        "ec2:DeleteCustomerGateway",
        "elasticmapreduce:PutBlockPublicAccessConfiguration",
        "iam:ChangePassword",
        "iam:CreateAccountAlias",
        "iam:CreateLoginProfile",
        "iam:CreateSAMLProvider",
        "iam:DeleteAccountPasswordPolicy",
        "iam:DeleteLoginProfile",
        "iam:DeleteUserPolicy",
        "iam:UntagMFADevice",
        "iam:TagMFADevice",
        "iam:ResyncMFADevice",
        "iam:EnableMFADevice",
        "iam:DeleteVirtualMFADevice",
        "iam:DeactivateMFADevice",
        "iam:CreateVirtualMFADevice",
        "iam:DeleteGroupPolicy",
        "iam:PutGroupPolicy",
        "iam:UpdateAccountPasswordPolicy",
        "securityhub:DeleteInvitations",
        "securityhub:DeleteMembers",
        "securityhub:UpdateStandardsControl",
        "securityhub:BatchDisableStandards",
        "securityhub:DisableOrganizationAdminAccount",
        "securityhub:DisableSecurityHub",
        "securityhub:DisableImportFindingsForProduct",
        "sso-directory:Create*",
        "sso-directory:Delete*",
        "sso-directory:Disable*",
        "sso-directory:Remove*",
        "sso-directory:Update*",
        "sso:AssociateDirectory",
        "sso:Delete*",
        "sso:Detach*",
        "sso:DisassociateDirectory",
        "sso:Import*",
        "sso:Put*",
        "sso:Update*"
      ],
      "Effect": "Deny",
      "Resource": "*",
      "Condition": {
        "ArnNotLike": {
          "aws:PrincipalARN": [
            "arn:aws:iam::*:role/platform*",
            "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*platform*",
            "arn:aws:iam::*:role/*AWSControlTower*",
            "arn:aws:iam::master_account_id:role/aws-service-role/stacksets.cloudformation.amazonaws.com/AWSServiceRoleForCloudFormationStackSetsOrgAdmin*",
            "arn:aws:iam::*:role/stacksets-exec*",
            "arn:aws:iam::*:role/aws-controltower*",
            "arn:aws:iam::*:root"
          ]
        }
      }
    }
  ]
}