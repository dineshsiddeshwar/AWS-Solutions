{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Action": [
                "application-autoscaling:*",
                "cloudformation:*",
                "sns:*",
                "codedeploy:*",
                "dax:CreateCluster",
                "dax:CreateParameterGroup",
                "dax:CreateSubnetGroup",
                "dax:DeleteCluster",
                "dax:DeleteParameterGroup",
                "dax:DeleteSubnetGroup",
                "dax:DescribeClusters",
                "dax:DescribeDefaultParameters",
                "dax:DescribeEvents",
                "dax:DescribeParameterGroups",
                "dax:DescribeParameters",
                "dax:DescribeSubnetGroups",
                "dax:UpdateCluster",
                "dax:UpdateParameterGroup",
                "dax:UpdateSubnetGroup",
                "dynamodb:CreateTable",
                "dynamodb:CreateBackup",
                "dynamodb:CreateTable",
                "dynamodb:DeleteTable",
                "dynamodb:DeleteTable",
                "dynamodb:DescribeStream",
                "dynamodb:DescribeContinuousBackups",
                "dynamodb:DescribeBackup",
                "dynamodb:DescribeTable",
                "dynamodb:ListStreams",
                "dynamodb:ListStreams",
                "dynamodb:ListTables",
                "dynamodb:UpdateTable",
                "dynamodb:TagResource",
                "dynamodb:UpdateContinuousBackups",
                "ec2:AllocateAddress",
                "ec2:AssociateAddress",
                "ec2:AssociateRouteTable",
                "ec2:AttachInternetGateway",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateInternetGateway",
                "ec2:CreateRoute",
                "ec2:CreateRouteTable",
                "ec2:CreateSecurityGroup",
                "ec2:CreateFlowLogs",
                "ec2:CreateNatGateway",
                "ec2:CreateSubnet",
                "ec2:CreateNetwork*",
                "ec2:CreateTags",
                "ec2:CreateVpc",
                "ec2:CreateVpcEndpoint",
                "ec2:DeleteInternetGateway",
                "ec2:DeleteRoute",
                "ec2:DeleteRouteTable",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteSubnet",
                "ec2:DeleteTags",
                "ec2:DeleteVpc",
                "ec2:DeleteVpcEndpoints",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeNatGateways",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeInstances",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeKeyPairs",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeNetwork*",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeVpcs",
                "ec2:DeleteNetwork*",
                "ec2:DetachInternetGateway",
                "ec2:DisassociateAddress",
                "ec2:ModifyVpcAttribute",
                "ec2:ReleaseAddress",
                "ec2:ReplaceNetworkAcl*",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "iot:*",
                "kms:*",
                "sqs:CreateQueue",
                "sqs:AddPermission",
                "sqs:DeleteQueue",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
                "sqs:SetQueueAttributes",
                "sqs:TagQueue",
                "sqs:RemovePermission",
                "events:*",
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:Unsubscribe",
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "autoscaling:Attach*",
                "autoscaling:Detach*",
                "autoscaling:Set*",
                "autoscaling:Update*",
                "autoscaling:Describe*",
                "autoscaling:Create*",
                "autoscaling:Delete*",
                "autoscaling:Put*",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "autoscaling:RecordLifecycleActionHeartbeat",
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:CancelInstanceRefresh",
                "autoscaling:ExecutePolicy",
                "autoscaling:ResumeProcesses",
                "rds:AddTagsToResource",
                "rds:Create*",
                "rds:Describe*",
                "rds:Delete*",
                "rds:Remove*",
                "rds:Modify*",
                "rds:RebootDBInstance",
                "rds:RestoreDBInstanceFromDBSnapshot",
                "rds:ResetDBClusterParameterGroup",
                "rds:ResetDBParameterGroup",
                "logs:Describe*",
                "logs:Create*",
                "logs:Delete*",
                "logs:Put*",
                "ecs:CreateCluster",
                "ecs:CreateService",
                "ecs:CreateTaskSet",
                "ecs:DeleteCluster",
                "ecs:DeleteService",
                "ecs:DeleteTaskSet",
                "ecs:DescribeServices",
                "ecs:DescribeTaskDefinition",
                "ecs:DescribeTasks",
                "ecs:DescribeClusters",
                "ecs:DescribeContainerInstances",
                "ecs:DiscoverPollEndpoint",
                "ecs:DeregisterContainerInstance",
                "ecs:DeregisterTaskDefinition",
                "ecs:ListTasks",
                "ecs:RegisterTaskDefinition",
                "ecs:UpdateService",
                "ecs:UpdateTaskSet",
                "ecs:UpdateContainerInstancesState",
                "ecs:UpdateClusterSettings",
                "ecs:UntagResource",
                "ecs:TagResource",
                "ecs:Submit*",
                "ecs:PutAttributes",
                "lambda:Get*",
                "lambda:List*",
                "lambda:Create*",
                "lambda:Delete*",
                "lambda:Update*",
                "lambda:Publish*",
                "lambda:TagResource",
                "lambda:AddPermission",
                "lambda:InvokeFunction",
                "lambda:RemovePermission",
                "lambda:PutFunctionConcurrency",
                "events:DescribeRule",
                "apigateway:DELETE",
                "apigateway:PUT",
                "apigateway:PATCH",
                "apigateway:POST",
                "apigateway:GET",
                "states:CreateStateMachine",
                "states:UpdateStateMachine",
                "states:DeleteStateMachine",
                "states:TagResource",
                "states:UntagResource"
            ],
            "Resource": "*",
            "Effect": "Allow",
            "Sid": "Default"
        },
        {
            "Action": [
                "ssm:*"
            ],
            "Resource": [
                "*"
            ],
            "Effect": "Allow",
            "Sid": "ssm"
        },
        {
            "Action": [
                "s3:*"
            ],
            "Resource": [
                "*"
            ],
            "Effect": "Allow",
            "Sid": "s3bucket"
        },
        {
            "Action": [
                "iam:AddRoleToInstanceProfile",
                "iam:AttachRolePolicy",
                "iam:CreateInstanceProfile",
                "iam:CreatePolicy",
                "iam:CreateRole",
                "iam:DeleteInstanceProfile",
                "iam:DeletePolicy",
                "iam:DeleteRole",
                "iam:DeleteRolePolicy",
                "iam:DetachRolePolicy",
                "iam:GetInstanceProfile",
                "iam:GetPolicy",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:ListAttachedRolePolicies",
                "iam:ListInstanceProfiles",
                "iam:ListInstanceProfilesForRole",
                "iam:ListRolePolicies",
                "iam:ListRoles",
                "iam:ListPolicyVersions",
                "iam:PutRolePolicy",
                "iam:RemoveRoleFromInstanceProfile",
                "iam:TagRole",
                "iam:UntagRole",
                "iam:CreatePolicyVersion",
                "iam:DeletePolicyVersion"
            ],
            "Resource": [
                "*"
            ],
            "Effect": "Allow",
            "Sid": "iam"
        },
        {
            "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
            ],
            "Resource": [
                "*"
            ],
            "Effect": "Allow",
            "Sid": "logs"
        },
        {
            "Action": [
                "ecr:CreateRepository",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload",
                "ecr:DescribeRepositories",
                "ecr:GetAuthorizationToken"
            ],
            "Resource": [
                "*"
            ],
            "Effect": "Allow",
            "Sid": "ecr"
        },
        {
            "Action": [
                "greengrass:*"
            ],
            "Resource": [
                "*"
            ],
            "Effect": "Allow",
            "Sid": "greengrass"
        }
    ]
}