# If a Load Balncer Port is '80' and default action type is 'redirect':
    # Redirect Port must be 443 and
    # Redirect Protocol must be 'HTTPS'

# Allowed
    # TestELBV2:
    # 	Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    # 	Properties:
    # 		Port: 80
    #         Protocol: HTTP
    #         Type: 'redirect'
    #         RedirectConfig:
    #             Port: 443
    #             Protocol: HTTPS
			    

# Allowed
    # resource "aws_lb_listener" "front_end" {
    #   load_balancer_arn = aws_lb.front_end.arn
    #   port              = "80"
    #   protocol          = "HTTP"

    #   default_action {
    #     type = "redirect"

    #     redirect {
    #       port        = "443"
    #       protocol    = "HTTPS"
    #       status_code = "HTTP_301"
    #     }
    #   }
    # }


import "tfplan-functions" as tfplan 

violatingResource = 0

elb_listner = tfplan.find_resources("aws_lb_listener")

for elb_listner as address, resource {
    getPort = resource.change.after.port
    if getPort == 80 {
        ref = resource.change.after.default_action
        for ref as defaultType{
            getType = defaultType.type
                if getType == "redirect" {
                    if length(defaultType.redirect) != 0 {
                        for defaultType.redirect as defaultBlock {
                            redirectPort = defaultBlock.port
                            redirectProtocol = defaultBlock.protocol
                            if redirectPort != "443" or redirectProtocol != "HTTPS" {
                                violatingResource += 1
                            }
                        }
                    } else {
                        violatingResource += 1
                    }
                }
        }
    }
}

main = rule {
    violatingResource == 0
}