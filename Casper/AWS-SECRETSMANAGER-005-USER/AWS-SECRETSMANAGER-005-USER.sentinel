# Ensure IAM policy attached to a user doesn't have * in resources

# This policy works for IAM policy attached to a user defined via the jsonencode function

# Import common-functions/tfplan-functions/tfplan-functions.sentinel
# with alias "plan"
import "tfplan-functions" as plan
import "types" # Import the types library
import "json" # Import the json library

# Get all resources for IAM policy attached to a user
allIamPolicies = plan.find_resources("aws_iam_user_policy")

# Set variable to keep track of violating policies
violatingPolicyCount = 0

# Loop through each policy
for allIamPolicies as address, policy {

    violatingPolicy = false # Reset to false for each policy resource 
    
    getPolicy = policy.change.after["policy"] else false

    if getPolicy is not false {
        
        if length(getPolicy) > 0 {
            
            policyObject = json.unmarshal(getPolicy) # Convert the policy to a JSON object
            
            for policyObject.Statement as statement { # Loop through each statement in the policy
                
                currentEffect    = statement.Effect else false
                currentAction    = statement.Action else false
                currentResource  = statement.Resource else false
                
                if currentEffect is not false and currentAction is not false and currentResource is not false {
                    
                    
                    if currentEffect == "Allow" and currentResource contains "*" {

                        if types.type_of(currentAction) is "string" {
                        
                            if currentAction == "*" or currentAction matches "secretsmanager" {
                                violatingPolicy = true
                            }

                        } else if types.type_of(currentAction) is "list" {

                            for currentAction as action {
                                if action == "*" or action matches "secretsmanager" {
                                    violatingPolicy = true
                                }
                            }
                        }
                    }
                }
            }

            if violatingPolicy == true {
                violatingPolicyCount += 1
                print ("IAM User policy", address, "has * in resources with secremanager actions")
            }
        }
    }
}

# Main rule
main = rule {
    violatingPolicyCount == 0
}